# pseudocode for a smart searcher.

# Group specific searches
## def aGroup_1; do aGroup_1 search; end
## def aGroup_2; do aGroup_2 search; end
## def aGroup_3; do aGroup_3 search; end
## def aGroup_4; do aGroup_4 search; end

## def gGroup_1; do gGroup_1 search; end
## def gGroup_2; do gGroup_2 search; end

## def pSearch_Mil;   do pGroup_1 search; end
## def pSearch_query; do pGroup_2 search; end

## def iGroup_1; do iGroup_1 search; end
## def iGroup_2; do iGroup_2 search; end
## def iGroup_3; do iGroup_3 search; end
## def iGroup_4; do iGroup_4 search; end

# def age
#   evaluate age
#     when age is    6..8; aGroup_1
#     when age is   9..12; aGroup_2 
#     when age is  13..17; aGroup_3
#     when age is  18..30; aGroup_4
#     when age is  31..64; aGroup_5
#     when age is 64..120; aGroup_6

# def gender
#   evaluate gender
#     if gender is female; gGroup_1
#     if gender is   male; gGroup_2

# def profession
#   evaluate profession
#     if profession is military
#       pSearch_Mil
#     else
#       pSearch_query

# def income
#   evaluate income
#     when income is       0..12000; iGroup_1
#     when income is   12001..24000; iGroup_2
#     when income is   24001..12000; iGroup_3
#     when income is 120001..240000; iGroup_4
#     else
#       comment that their income level is not understood.

# use naive bayes to decide age, gender, profession, or income.
